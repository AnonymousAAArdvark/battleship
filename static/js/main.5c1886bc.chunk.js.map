{"version":3,"sources":["scripts/Battleship.ts","scripts/Gameboard.ts","components/styled_components/BoardStyles.ts","components/Board.tsx","components/styled_components/DisplayShipsStyles.ts","components/DisplayShips.tsx","components/styled_components/BoardsStyles.ts","components/Boards.tsx","scripts/Player.ts","scripts/Game.ts","components/styled_components/AppStyles.ts","App.tsx","theme/Theme.ts","theme/GlobalStyle.ts","index.tsx"],"names":["Battleship","shipLength","origin","rotated","parts","this","Array","fill","length","part","Error","every","Gameboard","size","tiles","ships","from","states","shipHit","shipNotHit","missed","notShot","i","j","tile","push","shipParts","getParts","shipOrigin","getOrigin","valid","offset","off","location","validPlacement","getBoardStates","battleship","placementOffset","_","k","contactOffset","forEach","placement","some","contact","ship","getLength","shipRotated","getRotated","filter","removeShip","placeShip","to","state","attack","find","el","hit","markAroundSunk","isSunk","done","sort","a","b","len","success","tried","Math","floor","random","d","partsOffset","aroundOffset","around","BoardContainer","styled","div","theme","colors","gridBackground","tile_border","marked","invalid","Header","h4","Board","player","game","loop","rotate","move","turn","init","reset","useState","active","setActive","setMarked","updateTiles","useCallback","document","querySelectorAll","classList","remove","element","querySelector","add","getPlayer","getBoard","getTiles","getInit","originElement","chooseAction","e","target","elX","parseInt","getAttribute","elY","removeValid","showValid","boardCopy","getSize","getShips","getValidTiles","val","useEffect","className","map","row","data-x","data-y","data-player","onClick","onMouseMove","onMouseLeave","getName","ShipsContainer","css","ShipWrapper","Part","props","sunk","shipSunk","DisplayShips","BoardsContainer","Boards","updateTurn","statePlayer","setStatePlayer","stateComputer","setStateComputer","shipsPlayer","setShipsPlayer","shipsComputer","setShipsComputer","updateStatePlayer","loc","timeout","min","max","Promise","resolve","setTimeout","getWinner","playerTurn","setWinner","isWinner","next","computerTurn","rotateShip","moveShip","Player","board","name","attacks","shipsDamaged","pos","Game","shipSizes","players","currentPlayer","initialized","winner","distributeShips","index","getOpponent","receiveAttack","getCurrentPlayer","chooseAttack","allSunk","HeaderWrapper","Title","displayBorder","h1","DisplayWrapper","Display","displayBackground","Buttons","App","setGame","display","setDisplay","getTurn","setTurn","setInit","setReset","updateDisplay","restartGame","type","Theme","background","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5c1886bc.chunk.js","sourcesContent":["class Battleship {\n    private parts: boolean[];\n    private origin: [number, number];\n    private rotated: boolean;\n\n    constructor(shipLength: number, origin: [number, number], rotated: boolean) {\n        this.parts = new Array(shipLength).fill(false);\n        this.origin = origin;\n        this.rotated = rotated;\n    }\n\n    get getParts(): boolean[] {\n        return this.parts;\n    }\n\n    get getLength(): number {\n        return this.parts.length;\n    }\n\n    get getOrigin(): [number, number] {\n        return this.origin;\n    }\n\n    get getRotated(): boolean {\n        return this.rotated;\n    }\n\n    hit(part: number): void {\n        if(part > this.parts.length - 1) {\n            throw new Error(\"Value higher than ship length\");\n        }\n        this.parts[part] = true;\n    }\n\n    isSunk(): boolean {\n        return this.parts.every((part) => part);\n    }\n}\n\nexport default Battleship;","import Battleship from \"./Battleship\";\n\nclass Gameboard {\n  private size: number;\n  private tiles: (boolean | Battleship)[][];\n  private ships: Battleship[];\n\n  constructor(size: number) {\n    this.size = size;\n    this.tiles = Array.from({ length: size }, () =>\n      new Array(size).fill(false),\n    );\n    this.ships = [];\n  }\n\n  get getTiles(): (boolean | Battleship)[][] {\n    return this.tiles;\n  }\n\n  get getSize(): number {\n    return this.size;\n  }\n\n  get getShips(): Battleship[] {\n    return this.ships;\n  }\n\n  get getBoardStates(): { [state: string]: [number, number][] } {\n    const states: { [state: string]: [number, number][] } = {\n      shipHit: [],\n      shipNotHit: [],\n      missed: [],\n      notShot: [],\n    };\n\n    for(let i = 0; i < this.size; ++i) {\n      for(let j = 0; j < this.size; ++j) {\n        const tile = this.tiles[i][j];\n        if(typeof tile === \"boolean\") {\n          if(!tile) {\n            states.notShot.push([i, j]);\n          }\n          else {\n            states.missed.push([i, j]);\n          }\n        }\n        else {\n          const shipParts = tile.getParts;\n          const shipOrigin = tile.getOrigin;\n          const partToHit = shipOrigin[0] - i + (shipOrigin[1] - j);\n          if(!shipParts[partToHit]) {\n            states.shipNotHit.push([i, j]);\n          }\n          else {\n            states.shipHit.push([i, j]);\n          }\n        }\n      }\n    }\n    return states;\n  }\n\n  get getValidTiles(): [number, number][] {\n    const valid: [number, number][] = [];\n    const offset: [number, number][] = [\n      [-1, -1],\n      [-1, 0],\n      [-1, 1],\n      [0, -1],\n      [0, 1],\n      [1, -1],\n      [1, 0],\n      [1, 1],\n    ];\n    for(let i = 0; i < this.size; ++i) {\n      for(let j = 0; j < this.size; ++j) {\n        if(\n          offset.every((off) => {\n            if(\n              i + off[0] < 0 ||\n              i + off[0] > this.size - 1 ||\n              j + off[1] < 0 ||\n              j + off[1] > this.size - 1\n            ) {\n              return true;\n            }\n            return this.tiles[i + off[0]][j + off[1]] === false;\n          })\n        ) {\n          valid.push([i, j]);\n        }\n      }\n    }\n    return valid;\n  }\n\n  placeShip(shipLength: number, location: [number, number], rotated: boolean): void {\n    const validPlacement = this.getBoardStates.notShot;\n    const battleship = new Battleship(shipLength, [location[0], location[1]], rotated);\n    const placementOffset: [number, number][] = Array.from(\n      { length: shipLength },\n      (_, k) => (rotated ? [k, 0] : [0, k])\n    );\n    const contactOffset: number[][] = [\n      [-1, -1],\n      [-1, 0],\n      [-1, 1],\n      [0, -1],\n      [0, 1],\n      [1, -1],\n      [1, 0],\n      [1, 1],\n    ];\n\n    placementOffset.forEach((placement) => {\n      if(\n        !validPlacement.some(\n          (tile) =>\n            tile[0] === location[0] - placement[0] &&\n            tile[1] === location[1] - placement[1]\n        )\n      ) {\n        throw new Error(\"Invalid location.\");\n      }\n      contactOffset.forEach((contact) => {\n        if(\n          location[0] - placement[0] + contact[0] < 0 ||\n          location[0] - placement[0] + contact[0] > this.size - 1 ||\n          location[1] - placement[1] + contact[1] < 0 ||\n          location[1] - placement[1] + contact[1] > this.size - 1\n        ) {\n          return;\n        }\n        if(this.tiles[location[0]-placement[0]+contact[0]][location[1]-placement[1]+contact[1]]) {\n          throw new Error(\"Invalid location.\");\n        }\n      });\n    });\n    placementOffset.forEach((placement) => {\n      this.tiles[location[0] - placement[0]][location[1] - placement[1]] = battleship;\n    });\n    this.ships.push(battleship);\n  }\n\n  removeShip(location: number[]): void | Battleship {\n    if(typeof this.tiles[location[0]][location[1]] === \"boolean\") return;\n\n    const ship = this.tiles[location[0]][location[1]] as Battleship;\n    const shipLength = ship.getLength;\n    const shipOrigin = ship.getOrigin;\n    const shipRotated = ship.getRotated;\n    const offset: [number, number][] = Array.from(\n      {length: shipLength},\n      (_, k) => (shipRotated ? [k, 0] : [0, k])\n    );\n\n    offset.forEach((off) => {\n      this.tiles[shipOrigin[0] - off[0]][shipOrigin[1] - off[1]] = false;\n    });\n    this.ships = this.ships.filter((ship) =>\n      ship.getLength !== shipLength ||\n      ship.getOrigin[0] !== shipOrigin[0] ||\n      ship.getOrigin[1] !== shipOrigin[1] ||\n      ship.getRotated !== shipRotated\n    );\n\n    return ship;\n  }\n\n  rotateShip(location: [number, number]): boolean {\n    const ship = this.removeShip(location);\n    if(ship) {\n      try {\n        this.placeShip(ship.getLength, ship.getOrigin, !ship.getRotated);\n        return true;\n      }\n      catch {\n        this.placeShip(ship.getLength, ship.getOrigin, ship.getRotated);\n        return false;\n      }\n    }\n    return false;\n  }\n\n  moveShip(from: [number, number], to: [number, number]): boolean {\n    const ship = this.removeShip(from);\n    if(ship) {\n      try {\n        this.placeShip(ship.getLength, to, ship.getRotated);\n        return true;\n      }\n      catch {\n        this.placeShip(ship.getLength, from, ship.getRotated);\n        return false;\n      }\n    }\n    return false;\n  }\n\n  receiveAttack(location: [number, number]): boolean {\n    const state = this.getBoardStates;\n    const validAttacks = [...state.shipNotHit, ...state.notShot];\n    if(!validAttacks.some((attack) => attack[0] === location[0] && attack[1] === location[1])) {\n      return false;\n    }\n    if(state.notShot.find((el) => el[0] === location[0] && el[1] === location[1])) {\n      this.tiles[location[0]][location[1]] = true;\n      return true;\n    }\n    if(state.shipNotHit.find((el) => el[0] === location[0] && el[1] === location[1])) {\n      const tile = this.tiles[location[0]][location[1]];\n      (tile as Battleship).hit(\n        ((tile as Battleship).getOrigin[0] - location[0]) + ((tile as Battleship).getOrigin[1] - location[1])\n      );\n      this.markAroundSunk(tile as Battleship);\n      return true;\n    }\n    return false;\n  }\n\n  allSunk(): boolean {\n    return this.ships.every((ship) => ship.isSunk());\n  }\n\n  distributeShips(ships: number[]): boolean {\n    const done: boolean[] = [];\n    ships\n      .sort((a, b) => b - a)\n      .forEach((len) => {\n        let success = false;\n        const tried: [[number, number], boolean][] = [];\n        let location: [number, number] = [\n          Math.floor(Math.random() * this.size),\n          Math.floor(Math.random() * this.size)\n        ];\n        let rotated: boolean = Math.random() < .5;\n        const find = () => {\n          return tried.find((el) =>\n            el[0][0] === location[0] && el[0][1] === location[1] && el[1] === rotated\n          );\n        }\n        do {\n          try {\n            do {\n              location = [\n                Math.floor(Math.random() * this.size),\n                Math.floor(Math.random() * this.size)\n              ];\n              rotated = Math.random() < .5;\n            } while(\n              find()\n            );\n            this.placeShip(len, location, rotated);\n            success = true;\n          }\n          catch {\n            tried.push([location, rotated]);\n            success = false;\n          }\n        } while(!success && tried.length < this.size * this.size);\n        done.push(success);\n      });\n    return done.every((d) => d);\n  }\n\n  private markAroundSunk(ship: Battleship): void {\n    if(ship.isSunk()) {\n      const origin = ship.getOrigin;\n      const partsOffset = Array.from({length: ship.getLength}, (_, k) => ship.getRotated ? [k, 0] : [0, k]);\n      const aroundOffset: number[][] = [\n        [-1, -1],\n        [-1, 0],\n        [-1, 1],\n        [0, -1],\n        [0, 1],\n        [1, -1],\n        [1, 0],\n        [1, 1],\n      ];\n      partsOffset.forEach((part) => {\n        aroundOffset.forEach((around) => {\n          if(\n            origin[0] - part[0] + around[0] < 0 ||\n            origin[0] - part[0] + around[0] > this.size - 1 ||\n            origin[1] - part[1] + around[1] < 0 ||\n            origin[1] - part[1] + around[1] > this.size - 1\n          ) {\n            return;\n          }\n          if(!this.tiles[origin[0] - part[0] + around[0]][origin[1] - part[1] + around[1]]) {\n            this.tiles[origin[0] - part[0] + around[0]][origin[1] - part[1] + around[1]] = true;\n          }\n        });\n      });\n    }\n  }\n}\n\nexport default Gameboard;","import styled from \"styled-components\";\n\nconst BoardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  \n  .board-wrapper {\n    opacity: .4;\n    counter-reset: row column;\n    font-size: 1rem;\n    font-weight: 700;\n\n    .board-row {\n      counter-increment: row;\n      \n      &:last-child {\n        .board-element {\n          counter-increment: column;\n\n          &::after {\n            content: counter(column, upper-latin);\n          }\n        }\n      }\n      \n      &::before {\n        content: counter(row);\n      }\n      \n      .board-element {\n        .board-tile {\n          position: relative;\n          width: calc(1.4rem + 1vw);\n          height: calc(1.4rem + 1vw);\n          background-color: ${({ theme }) => theme.colors.gridBackground};\n          border: 2px solid ${({ theme }) => theme.colors.tile_border};\n          border-radius: 2px;\n        }\n        \n        .ship-not-hit {\n          background-color: ${({ theme }) => theme.colors.ship};\n          cursor: pointer;\n        }\n        \n        .ship-hit {\n          background-color: #c86b85;\n\n          &::after {\n            content: '\\\\f00d';\n            position: absolute;\n            font-family: 'Font Awesome 5 Free', sans-serif;\n            font-weight: 1000;\n            font-size: 15px;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n          }\n        }\n\n        .ship-sunk {\n          background-color: #bbbbbb;\n\n          &::after {\n            content: '\\\\f00d';\n            position: absolute;\n            font-family: 'Font Awesome 5 Free', sans-serif;\n            font-weight: 1000;\n            font-size: 15px;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n          }\n        }\n\n        .missed {\n          background-color: #bce6eb;\n\n          &::after {\n            content: '\\\\f111';\n            position: absolute;\n            font-family: 'Font Awesome 5 Free', sans-serif;\n            font-weight: 1000;\n            font-size: 7px;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n          }\n        }\n\n        .marked {\n          background-color: ${({ theme }) => theme.colors.marked};\n        }\n\n        .marked-origin {\n          background-color: ${({ theme }) => theme.colors.marked};\n\n          &::after {\n            content: '\\\\f0e2';\n            position: absolute;\n            font-family: 'Font Awesome 5 Free', sans-serif;\n            font-weight: 1000;\n            font-size: 13px;\n            left: 50%;\n            top: 50%;\n            transform: translate(-50%, -50%);\n          }\n        }\n\n        .valid {\n          background-color: ${({ theme }) => theme.colors.valid};\n        }\n\n        .valid-origin {\n          background-color: ${({ theme }) => theme.colors.valid};\n        }\n\n        .invalid {\n          background-color: ${({ theme }) => theme.colors.invalid};\n        }\n\n        .invalid-origin {\n          background-color: ${({ theme }) => theme.colors.invalid};\n        }\n      }\n    }\n  }\n\n  .active {\n    opacity: .8;\n\n    .board-row {\n\n      .board-element {\n\n        .board-tile {\n\n          &:hover {\n            border: 2px solid #878891;\n            cursor: pointer;\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst Header = styled.h4`\n  margin-top: .6rem;\n  font-weight: 500;\n  font-size: 1.3rem;\n`;\n\nexport { BoardContainer, Header };","import React, {useState, useEffect, useCallback} from \"react\";\nimport Battleship from \"../scripts/Battleship\";\nimport Game from \"../scripts/Game\";\nimport Gameboard from \"../scripts/Gameboard\";\nimport { BoardContainer, Header } from \"./styled_components/BoardStyles\";\n\ntype BoardProps = {\n  player: 0 | 1;\n  game: Game;\n  state: { [state: string]: [number, number][] };\n  loop: (loc: [number, number]) => void;\n  rotate: (loc: [number, number]) => void;\n  move: (from: [number, number], to: [number, number]) => void;\n  turn: 0 | 1;\n  init: boolean;\n  reset: boolean;\n};\n\nconst Board = ({ player, game, state, loop, rotate, move, turn, init, reset }: BoardProps) => {\n  const [active, setActive] = useState<string>(\"\");\n  const [marked, setMarked] = useState<Battleship | null>(null);\n\n  const updateTiles = useCallback(() => {\n    // adds classes to elements appropriate to their state\n    const elements = document.querySelectorAll(\n      `.board-tile[data-player=\"${player}\"]`,\n    );\n    elements.forEach((el) => {\n      // first clear all added classes\n      el.classList.remove('ship-not-hit');\n      el.classList.remove('ship-hit');\n      el.classList.remove('ship-sunk');\n      el.classList.remove('missed');\n      el.classList.remove('marked-origin');\n      el.classList.remove('marked');\n    });\n\n    if (player === 0) {\n      state.shipNotHit.forEach((ship) => {\n        const element = document.querySelector(\n          `.board-tile[data-x=\"${ship[0]}\"][data-y=\"${ship[1]}\"][data-player=\"${player}\"]`,\n        );\n        element?.classList.add('ship-not-hit');\n      });\n    }\n    state.shipHit.forEach((ship) => {\n      const element = document.querySelector(\n        `.board-tile[data-x=\"${ship[0]}\"][data-y=\"${ship[1]}\"][data-player=\"${player}\"]`,\n      );\n      if(!(game.getPlayer(player).getBoard.getTiles[ship[0]][ship[1]] as Battleship)) {\n        return;\n      }\n      if ((game.getPlayer(player).getBoard.getTiles[ship[0]][ship[1]] as Battleship).isSunk()) {\n        element?.classList.add('ship-sunk');\n      } else {\n        element?.classList.add('ship-hit');\n      }\n    });\n\n    state.missed.forEach((ship) => {\n      const element = document.querySelector(\n        `.board-tile[data-x=\"${ship[0]}\"][data-y=\"${ship[1]}\"][data-player=\"${player}\"]`,\n      );\n      element?.classList.add('missed');\n    });\n\n    if (marked && !game.getInit) {\n      const origin = marked.getOrigin;\n      const offset: [number, number][] = Array.from(\n        { length: marked.getLength - 1 },\n        (_, k) => (marked.getRotated ? [k + 1, 0] : [0, k + 1]),\n      );\n\n      const originElement = document.querySelector(\n        `.board-tile[data-x=\"${origin[0]}\"][data-y=\"${origin[1]}\"][data-player=\"${player}\"]`,\n      );\n      originElement?.classList.add('marked-origin');\n\n      offset.forEach((off) => {\n        const element = document.querySelector(\n          `.board-tile[data-x=\"${origin[0] - off[0]}\"][data-y=\"${\n            origin[1] - off[1]\n          }\"][data-player=\"${player}\"]`,\n        );\n        element?.classList.add('marked');\n      });\n    }\n  }, [game, marked, player, state.missed, state.shipHit, state.shipNotHit])\n\n  const chooseAction = (e: React.MouseEvent<HTMLDivElement>) => {\n    const el = e.target as HTMLDivElement;\n    const elX = parseInt(el.getAttribute('data-x') as string, 10);\n    const elY = parseInt(el.getAttribute('data-y') as string, 10);\n\n    if (\n      player === 1 - turn &&\n      player === 1 &&\n      game.getInit\n    ) {\n      loop([elX, elY]);\n    } else if (player === 0 && !game.getInit) {\n      if (!marked) {\n        const tile = game.getPlayer(0).getBoard.getTiles[elX][elY];\n        if (typeof tile !== 'boolean') {\n          setMarked(tile);\n        }\n      } else if (marked) {\n        const origin = marked.getOrigin;\n        if (origin[0] === elX && origin[1] === elY) {\n          rotate([elX, elY]);\n          removeValid();\n          setMarked(null);\n        } else {\n          move([origin[0], origin[1]], [elX, elY]);\n          removeValid();\n          setMarked(null);\n        }\n      }\n    }\n  }\n\n  const showValid = (e: React.MouseEvent<HTMLDivElement>) => {\n    // marks valid tiles for moving or rotating ship\n    if (marked) {\n      const el = e.target as HTMLDivElement;\n      const elX = parseInt(el.getAttribute('data-x') as string, 10);\n      const elY = parseInt(el.getAttribute('data-y') as string, 10);\n      const origin = marked.getOrigin;\n\n      // offset is different if we mouse over origin tile or not\n      let offset: [number, number][];\n      if (elX === origin[0] && elY === origin[1]) {\n        offset = Array.from({ length: marked.getLength }, (_, k) =>\n          marked.getRotated ? [0, k] : [k, 0],\n        );\n      } else {\n        offset = Array.from({ length: marked.getLength }, (_, k) =>\n          marked.getRotated ? [k, 0] : [0, k],\n        );\n      }\n\n      // get valid tiles, but include tiles in place of marked ship\n      const boardCopy = new Gameboard(game.getPlayer(0).getBoard.getSize);\n      const ships = game.getPlayer(0).getBoard.getShips;\n      ships.forEach((ship) => {\n        if (\n          ship.getOrigin[0] !== origin[0] ||\n          ship.getOrigin[1] !== origin[1]\n        ) {\n          boardCopy.placeShip(ship.getLength, ship.getOrigin, ship.getRotated);\n        }\n      });\n      const valid = boardCopy.getValidTiles;\n\n      // mark tiles\n      if (\n        offset.every((off) =>\n          valid.find(\n            (val) => elX - off[0] === val[0] && elY - off[1] === val[1],\n          ),\n        )\n      ) {\n        const originElement = document.querySelector(\n          `.board-tile[data-x=\"${elX}\"][data-y=\"${elY}\"][data-player=\"${0}\"]`,\n        );\n        originElement?.classList.add('valid-origin');\n\n        offset.forEach((off) => {\n          if (off[0] !== 0 || off[1] !== 0) {\n            const element = document.querySelector(\n              `.board-tile[data-x=\"${elX - off[0]}\"][data-y=\"${\n                      elY - off[1]\n              }\"][data-player=\"${0}\"]`,\n            );\n            element?.classList.add('valid');\n          }\n        });\n      }\n      else {\n        const originElement = document.querySelector(\n          `.board-tile[data-x=\"${elX}\"][data-y=\"${elY}\"][data-player=\"${0}\"]`,\n        );\n        originElement?.classList.add('invalid-origin');\n\n        offset.forEach((off) => {\n          if (off[0] !== 0 || off[1] !== 0) {\n            const element = document.querySelector(\n              `.board-tile[data-x=\"${elX - off[0]}\"][data-y=\"${\n                elY - off[1]\n              }\"][data-player=\"${0}\"]`,\n            );\n            element?.classList.add('invalid');\n          }\n        });\n      }\n    }\n  }\n\n  const removeValid = () => {\n    const elements = document.querySelectorAll(\n      `.board-tile[data-player=\"${0}\"]`,\n    );\n    elements.forEach((el) => {\n      el.classList.remove('valid-origin');\n      el.classList.remove('valid');\n      el.classList.remove('invalid-origin');\n      el.classList.remove('invalid');\n    });\n  }\n\n  useEffect(() => {\n    if (!game.getInit) {\n      setActive('active');\n    } else if (turn === 1 - player) {\n      setActive('active');\n    } else {\n      setActive('');\n    }\n    updateTiles();\n  }, [turn, init, game, player, updateTiles]);\n\n  useEffect(() => {\n    if(reset) {\n      updateTiles();\n    }\n  }, [reset, updateTiles]);\n\n  useEffect(() => {\n    updateTiles();\n  });\n\n  return (\n    <BoardContainer>\n      <table className={`board-wrapper ${active}`}>\n        <tbody>\n          {game\n            .getPlayer(player)\n            .getBoard.getTiles.map((row, i) => {\n              return (\n                <tr key={i} className=\"board-row\">\n                  {row.map((_, j) => {\n                    return (\n                      <td key={j} className=\"board-element\">\n                        <div\n                          key={`(${i}, ${j})`}\n                          data-x={`${i}`}\n                          data-y={`${j}`}\n                          data-player={player}\n                          className=\"board-tile\"\n                          onClick={chooseAction}\n                          onMouseMove={showValid}\n                          onMouseLeave={removeValid}\n                        />\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n      <Header>{`${game.getPlayer(player).getName} board`}</Header>\n    </BoardContainer>\n  )\n}\n\nexport default Board;","import styled, { css } from \"styled-components\";\n\nconst ShipsContainer = styled.div<{ player: string }>`\n  position: absolute;\n  display: flex;\n  flex-direction: column;\n  gap: .7rem;\n  top: 1rem;\n  ${({ player }) => player === \"player\" && css`\n    align-items: flex-end;\n    right: 95%;\n  `};\n  ${({ player }) => player === \"computer\" && css`\n    left: 95%;\n  `};\n  \n  @media (max-width: 1100px) {\n    display: none;\n  }\n  @media (max-width: 920px) {\n    display: flex;\n  }\n  @media (max-width: 550px) {\n    display: none;\n  }\n`;\n\nconst ShipWrapper = styled.div`\n  display: flex;\n  gap: .3rem;\n`;\n\nconst Part = styled.div<{ sunk: boolean }>`\n  width: .7rem;\n  height: .7rem;\n  background-color: ${props => props.sunk ? ({theme})=>theme.colors.shipSunk : ({theme})=>theme.colors.ship};\n`;\n\nexport {ShipsContainer, ShipWrapper, Part};","import React from \"react\";\nimport Battleship from \"../scripts/Battleship\";\nimport { ShipWrapper, ShipsContainer, Part } from \"./styled_components/DisplayShipsStyles\";\n\ntype DisplayShipsProps = {\n  player: string,\n  ships: Battleship[]\n};\n\nconst DisplayShips = ({player, ships}: DisplayShipsProps) => {\n  return (\n    <ShipsContainer player={player}>\n      {ships.sort((a, b) => a.getLength - b.getLength).map((ship, i) => {\n        return(\n          <ShipWrapper key={i}>\n            {ship.getParts.map((_, j) => {\n              if(ship.isSunk()) {\n                return <Part sunk={true} key={j} />;\n              }\n              else {\n                return <Part sunk={false} key={j} />;\n              }\n            })}\n          </ShipWrapper>\n        )\n      })}\n    </ShipsContainer>\n  );\n};\n\nexport default DisplayShips;","import styled from \"styled-components\";\n\nconst BoardsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 4vh;\n`;\n\nconst BoardContainer = styled.div`\n  display: flex;\n  padding: 0 6vh 0 6vh;\n  gap: 0.5vh;\n  position: relative;\n`;\n\nexport { BoardContainer, BoardsContainer };","import React, { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\nimport DisplayShips from \"./DisplayShips\";\nimport Game from \"../scripts/Game\";\nimport Battleship from \"../scripts/Battleship\";\nimport { BoardsContainer, BoardContainer } from \"./styled_components/BoardsStyles\";\n\ntype BoardsProps = {\n  game: Game;\n  updateTurn: () => void;\n  turn: 0 | 1;\n  init: boolean;\n  reset: boolean;\n}\n\nconst Boards = ({ game, updateTurn, turn, init, reset }: BoardsProps) => {\n  const [statePlayer, setStatePlayer] = useState<{[state: string]: [number, number][]}>(\n    game.getPlayer(0).getBoard.getBoardStates\n  );\n  const [stateComputer, setStateComputer] = useState<{[state: string]: [number, number][]}>(\n    game.getPlayer(1).getBoard.getBoardStates\n  );\n  const [shipsPlayer, setShipsPlayer] = useState<Battleship[]>(\n    game.getPlayer(0).getBoard.getShips\n  );\n  const [shipsComputer, setShipsComputer] = useState<Battleship[]>(\n    game.getPlayer(1).getBoard.getShips\n  );\n\n  const updateStatePlayer = () => {\n    setStatePlayer(game.getPlayer(0).getBoard.getBoardStates);\n  }\n\n  const updateStateComputer = () => {\n    setStateComputer(game.getPlayer(1).getBoard.getBoardStates);\n  }\n\n  const updateShipsPlayer = () => {\n    setShipsPlayer(game.getPlayer(0).getBoard.getShips);\n  }\n\n  const updateShipsComputer = () => {\n    setShipsComputer(game.getPlayer(1).getBoard.getShips);\n  }\n\n  const loop = async (loc: [number, number]) => {\n    function timeout(min: number, max: number) {\n      return new Promise((resolve) =>\n        setTimeout(resolve, Math.floor(Math.random() * (max - min)) + min),\n      );\n    }\n\n    if (game.getWinner === -1) {\n      const success = game.playerTurn([loc[0], loc[1]]);\n      if (success) {\n        game.setWinner = game.isWinner();\n        updateStateComputer();\n        updateShipsComputer();\n        updateTurn();\n        game.next();\n        if (game.getWinner === -1) {\n          updateTurn();\n          await timeout(500, 2000);\n          game.computerTurn();\n          game.setWinner = game.isWinner();\n          updateTurn();\n          game.next();\n          updateTurn();\n          updateStatePlayer();\n          updateShipsPlayer();\n        }\n      }\n    }\n  }\n\n  const rotateShip = (loc: [number, number]) => {\n    game.getPlayer(0).getBoard.rotateShip(loc);\n    updateStatePlayer();\n  }\n\n  const moveShip = (from: [number, number], to: [number, number]) => {\n    game.getPlayer(0).getBoard.moveShip(from, to);\n    updateStatePlayer();\n  }\n\n  useEffect(() => {\n    if(reset) {\n      setStatePlayer(game.getPlayer(0).getBoard.getBoardStates);\n      setStateComputer(game.getPlayer(1).getBoard.getBoardStates);\n      setShipsPlayer(game.getPlayer(0).getBoard.getShips);\n      setShipsComputer(game.getPlayer(1).getBoard.getShips);\n    }\n  }, [reset, game]);\n\n  return (\n    <BoardsContainer>\n      <BoardContainer>\n        <DisplayShips player=\"player\" ships={shipsPlayer} />\n        <Board\n          player={0}\n          game={game}\n          state={statePlayer}\n          loop={loop}\n          rotate={rotateShip}\n          move={moveShip}\n          turn={turn}\n          init={init}\n          reset={reset}\n        />\n      </BoardContainer>\n      <BoardContainer>\n        <Board\n          player={1}\n          game={game}\n          state={stateComputer}\n          loop={loop}\n          rotate={rotateShip}\n          move={moveShip}\n          turn={turn}\n          init={init}\n          reset={reset}\n        />\n        <DisplayShips player=\"computer\" ships={shipsComputer} />\n      </BoardContainer>\n    </BoardsContainer>\n  );\n}\n\nexport default Boards;","import Gameboard from \"./Gameboard\";\nimport Battleship from \"./Battleship\";\n\nclass Player {\n  private board: Gameboard;\n  private name: string;\n\n  constructor(board: Gameboard, name: string) {\n    this.board = board;\n    this.name = name;\n  }\n\n  get getBoard(): Gameboard {\n    return this.board;\n  }\n\n  get getName(): string {\n    return this.name;\n  }\n\n  chooseAttack(board: Gameboard): number[] {\n    const state = board.getBoardStates;\n    let attacks: [number, number][] = [];\n\n    if(state.shipHit.length > 0) {\n      const shipsDamaged = state.shipHit.filter((loc) => {\n        return !(board.getTiles[loc[0]][loc[1]] as Battleship).isSunk();\n      });\n      if(shipsDamaged.length > 0) {\n        let offset: [number, number][] = [\n          [-1, 0],\n          [0, -1],\n          [0, 1],\n          [1, 0]\n        ];\n        shipsDamaged.forEach((pos) => {\n          if((board.getTiles[pos[0]][pos[1]] as Battleship).getParts.filter((part) => part).length > 1) {\n            offset = (board.getTiles[pos[0]][pos[1]] as Battleship).getRotated\n              ? [[-1, 0], [1, 0]] : [[0, -1], [0, 1]];\n          }\n          offset.forEach((off) => {\n            if(\n              pos[0] + off[0] < 0 ||\n              pos[0] + off[0] > board.getSize - 1 ||\n              pos[1] + off[1] < 0 ||\n              pos[1] + off[1] > board.getSize - 1\n            ) {\n              return;\n            }\n            if(!state.shipHit.find((el) => el[0] === pos[0] + off[0] && el[1] === pos[1] + off[1])\n            && !state.missed.find((el) => el[0] === pos[0] + off[0] && el[1] === pos[1] + off[1])) {\n              attacks.push([pos[0] + off[0], pos[1] + off[1]]);\n            }\n          });\n        });\n        if(attacks.length > 0) {\n          return attacks[Math.floor(Math.random() * attacks.length)];\n        }\n      }\n    }\n    attacks = [...state.shipNotHit, ...state.notShot];\n    return attacks[Math.floor(Math.random() * attacks.length)];\n  }\n}\n\nexport default Player;","import Player from \"./Player\";\nimport Gameboard from \"./Gameboard\";\n\nclass Game {\n  private shipSizes: number[];\n  private players: Player[];\n  private currentPlayer: 0 | 1;\n  private initialized: boolean;\n  private winner: -1 | 0 | 1;\n\n  constructor(shipSizes: number[], size: number) {\n    this.shipSizes = shipSizes;\n    this.players = [\n      new Player(new Gameboard(size), \"Player\"),\n      new Player(new Gameboard(size), \"Computer\")\n    ];\n    this.currentPlayer = 0;\n    this.initialized = false;\n    this.winner = -1;\n\n    this.players[0].getBoard.distributeShips(this.shipSizes);\n    this.players[1].getBoard.distributeShips(this.shipSizes);\n  }\n\n  init(): void {\n    if(this.players[0].getBoard.getShips.length === this.shipSizes.length && !this.initialized) {\n      this.initialized = true;\n    }\n  }\n\n  get getCurrentPlayer(): Player {\n    return this.players[this.currentPlayer];\n  }\n\n  get getOpponent(): Player {\n    return this.players[1 - this.currentPlayer];\n  }\n\n  get getTurn(): 0 | 1 {\n    return this.currentPlayer;\n  }\n\n  get getWinner(): -1 | 0 | 1 {\n    return this.winner;\n  }\n\n  set setWinner(winner: -1 | 0 | 1) {\n    this.winner = winner;\n  }\n\n  get getInit(): boolean {\n    return this.initialized;\n  }\n\n  get getShips(): number[] {\n    return this.shipSizes;\n  }\n\n  getPlayer(index: 0 | 1): Player {\n    return this.players[index];\n  }\n\n  next(): void {\n    this.currentPlayer = (1 - this.currentPlayer) as 0 | 1;\n  }\n\n  playerTurn(location: [number, number]): boolean {\n    return this.getOpponent.getBoard.receiveAttack(location);\n  }\n\n  computerTurn(): void {\n    let attack: [number, number];\n    let success = false;\n    do {\n      attack = (this.getCurrentPlayer.chooseAttack(this.getOpponent.getBoard)) as [number, number];\n      success = this.getOpponent.getBoard.receiveAttack(attack);\n    } while(!success);\n  }\n\n  isWinner(): -1 | 0 | 1 {\n    return this.getOpponent.getBoard.allSunk() ? this.currentPlayer : -1;\n  }\n}\nexport default Game;","import styled from \"styled-components\";\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 1rem;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  font-size: 3rem;\n  align-items: center;\n  border-bottom: 4px solid ${({ theme }) => theme.colors.displayBorder};\n  color: ${({ theme }) => theme.colors.displayBorder};\n\n`;\n\nconst Header = styled.h1`\n  text-align: center;\n  padding: .5rem;\n  font-size: 3rem;\n`;\n\nconst DisplayWrapper = styled.div`\n  display: flex;\n  padding: 2rem;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Display = styled.div`\n  padding: .7rem;\n  display: flex;\n  border: 2px solid ${({ theme }) => theme.colors.displayBorder};\n  border-radius: 0.2rem;\n  background-color: ${({ theme }) => theme.colors.displayBackground};\n  \n  h2 {\n    font-size: 1.5rem;\n    font-weight: 500;\n  }\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 1rem;\n\n  .startGame {\n    cursor: pointer;\n    font-family: \"Montserrat\", sans-serif;\n    padding: .7rem 1.4rem;\n    border: 2px solid ${({ theme }) => theme.colors.displayBorder};\n    border-radius: 5px;\n    font-size: 1rem;\n    font-weight: 600;\n  }\n  \n  .disabled {\n    border: 2px solid gray;\n    color: gray;\n  }\n`;\n\nexport { Display, DisplayWrapper, Buttons, Header, HeaderWrapper, Title };","import React, { useState, useEffect } from 'react';\nimport Boards from \"./components/Boards\";\nimport Game from \"./scripts/Game\";\nimport { Display, DisplayWrapper, Buttons, Header, HeaderWrapper, Title } from \"./components/styled_components/AppStyles\";\nimport { FaWater } from \"react-icons/all\";\n\nconst App = () => {\n  const ships: number[] = [5, 4, 3, 3, 2];\n  const [game, setGame] = useState<Game>(new Game(ships, 10));\n  const [display, setDisplay] = useState<string>('Move/Rotate ships');\n  const [turn, setTurn] = useState<0 | 1>(game.getTurn);\n  const [init, setInit] = useState<boolean>(game.getInit);\n  const [reset, setReset] = useState<boolean>(false);\n\n  const updateDisplay = () => {\n    if (!game.getInit) {\n      setDisplay('Move/Rotate ships');\n    } else if (game.getWinner !== -1) {\n      setDisplay(`${game.getPlayer(game.getWinner).getName} won!`);\n    } else if (game.getInit) {\n      setDisplay(`${game.getCurrentPlayer.getName} turn`);\n    }\n  }\n\n  const updateTurn = () => {\n    setTurn(game.getTurn);\n    updateDisplay();\n  }\n\n  const updateInit = () => {\n    setInit(game.getInit);\n  }\n\n  const initGame = () => {\n    game.init();\n    updateDisplay();\n    updateInit();\n    setReset(false);\n  }\n\n  const restartGame = async () => {\n    setGame(new Game(ships, 10));\n    setReset(true);\n    setDisplay(\"Move/Rotate ships\");\n    setInit(false);\n  }\n\n  return (\n    <div className=\"app\">\n      <HeaderWrapper>\n        <Title>\n          <FaWater/><Header>Battleship</Header><FaWater/>\n        </Title>\n      </HeaderWrapper>\n      <DisplayWrapper>\n        <Display>\n          <h2 className={\"display\"}>{display}</h2>\n        </Display>\n      </DisplayWrapper>\n      <Boards game={game} updateTurn={updateTurn} turn={turn} init={init} reset={reset} />\n      <Buttons>\n        {\n          !init ? <button className=\"startGame\" type=\"button\" onClick={initGame}>Start Game</button>\n          : game.getTurn === 0 || game.getWinner != -1 ? <button className=\"startGame\" type=\"button\" onClick={restartGame}>Restart Game</button>\n            : <button className=\"startGame disabled\" type=\"button\">Restart Game</button>\n        }\n      </Buttons>\n    </div>\n  );\n}\n\nexport default App;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const Theme: DefaultTheme = {\n  colors: {\n    ship: \"#787878\",\n    shipSunk: \"#bbbbbb\",\n    tile_border: \"#393b44\",\n    marked: \"#adadad\",\n    valid: \"#8db596\",\n    invalid: \"#9f5f80\",\n    displayBackground: \"#f4f4f4\",\n    background: \"#eeeeee\",\n    gridBackground: \"#abd5eb\",\n    displayBorder: \"#333333\",\n  },\n};\n\nexport default Theme;","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  *, *:before, *:after {\n      box-sizing: border-box;\n      padding: 0;\n      margin: 0;\n      word-wrap: break-word;\n    }\n    \n    html {\n      line-height: 1.6;\n      position: relative;\n      min-height: 100%;\n    }\n    \n    body {\n      font-family: 'Montserrat', sans-serif;\n      background-color: ${({ theme }) => theme.colors.background};\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    } \n    \n    h1, h2, h3, h4, h5, h6 {\n      line-height: 1.2;\n    }\n    \n    a {\n      text-decoration: none;\n    }\n    \n    img {\n      display: block;\n      width: 100%;\n    }\n    \n    button {\n      cursor: pointer;\n    }\n`;\n\nexport default GlobalStyle;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ThemeProvider } from \"styled-components\";\nimport Theme from \"./theme/Theme\";\nimport GlobalStyle from \"./theme/GlobalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={Theme}>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}